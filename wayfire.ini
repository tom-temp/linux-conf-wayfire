# Default config for Wayfire
#
# Copy this to ~/.config/wayfire.ini and edit it to your liking.
#
# Take the tutorial to get started.
# https://github.com/WayfireWM/wayfire/wiki/Tutorial
#
# Read the Configuration document for a complete reference.
# wayfire配置 WIKI页面
# https://github.com/WayfireWM/wayfire/wiki/Configuration

# Input configuration ──────────────────────────────────────────────────────────
# 键盘输出设置
# Example configuration:
# 举例
# [input]
# xkb_layout = us,fr
# xkb_variant = dvorak,bepo
#
# See Input options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#input

[input]
# 键盘格式
xkb_layout = us
mouse_accel_profile = adaptive
kb_numlock_default_state = true
kb_capslock_default_state = false
cursor_theme = Graphite-light-cursors
cursor_size = 36
mouse_cursor_speed = 0.000000
mouse_scroll_speed = 1.000000
disable_touchpad_while_mouse = false
disable_touchpad_while_typing = true
gesture_sensitivity = 1.000000
kb_repeat_delay = 400
kb_repeat_rate = 40
left_handed_mode = false
middle_emulation = false
modifier_binding_timeout = 400
mouse_accel_profile = default
natural_scroll = false
scroll_method = default
tap_to_click = true
touchpad_accel_profile = default
touchpad_cursor_speed = 0.000000
touchpad_scroll_speed = 1.000000
xkb_layout = us
xkb_model = 
xkb_options = 
xkb_rules = evdev
xkb_variant = 
# Mouse bindings ───────────────────────────────────────────────────────────────
# 鼠标绑定
# Output configuration ─────────────────────────────────────────────────────────
# Example configuration:
# 举例
# [output:eDP-1]
# mode = 1920x1080@60000
# position = 0,0
# transform = normal
# scale = 1.000000

[output:Virtual-1]
mode = 1440x900@60000
position = auto
scale = 1.000000
transform = normal

# [output:HDMI-A-1]
# #屏幕输出分辨率，位置，方向，缩放等
# mode = 1920x1080@60000
# position = 1920,0
# transform = normal
# scale = 1.000000

# You can get the names of your outputs with wlr-randr.
# 你可以通过wlr-randr来查看你的显示器名
# https://github.com/emersion/wlr-randr
#
# See also kanshi for configuring your outputs automatically.
# https://wayland.emersion.fr/kanshi/
#
# See Output options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#output

# Core options ─────────────────────────────────────────────────────────────────
[core]
background_color = \#99C1F1dd
# List of plugins to be enabled.
# See the Configuration document for a complete list.
plugins = \
  alpha \
  animate \
  autostart \
  command \
  decoration \
  expo \
  fast-switcher \
  grid \
  idle \
  move \
  oswitch \
  place \
  resize \
  switcher \
  vswitch \
  window-rules \
  wm-actions \
  wobbly \
  zoom 


#  preserve-output \
#  simple-tile

#   invert \
#   cube \
#  fisheye \
#  blur \
#   wrot \
# Note: [blur] is not enabled by default, because it can be resource-intensive.
# blur 默认配置中不开启，因为它可能会占用大量资源
# Feel free to add it to the list if you want it.
# You can find its documentation here:
# https://github.com/WayfireWM/wayfire/wiki/Configuration#blur

# xwayland = true
# Close focused window.
# 关闭窗口
close_top_view = <super> KEY_Q | <alt> KEY_F4

# Workspaces arranged into a grid: 3 × 3.
# 工作区间数量比例
vwidth = 2
vheight = 2

# Prefer client-side decoration or server-side decoration
# 首选窗口装饰
preferred_decoration_mode = client

# Effects ──────────────────────────────────────────────────────────────────────

[animate]
close_animation = zoom
duration = 400
enabled_for = (type equals "toplevel" | (type equals "x-or" & focusable equals true))
fade_duration = 400
fade_enabled_for = type equals "overlay"
fire_duration = 300
fire_enabled_for = none
fire_particle_size = 16.000000
fire_particles = 2000
open_animation = zoom
startup_duration = 600
zoom_duration = 500
zoom_enabled_for = none

# 标题装饰
# [decoration]
# active_color = \#222222AA
# border_size = 4
# button_order = minimize maximize close
# font = Iosevka,Iosevka Nerd Font
# ignore_views = none
# inactive_color = \#333333DD
# title_height = 30

[decoration]
active_color = \#62A0EAdd
border_size = 3
button_order = minimize maximize close
font = Iosevka,Iosevka Nerd Font
ignore_views = none
inactive_color = \#99C1F1dd
title_height = 30
#ignore_views = title contains "Ulauncher"

# 窗口透明度 super+滚轮
[alpha]
min_value = 0.100000
modifier = <super> 

# Drag windows by holding down Super and left mouse button.
# 窗口移动，super+左键 BTN_LEFT是鼠标左键
[move]
activate = <super> BTN_LEFT

# Resize them with right mouse button + Super.
# 窗口大小，super+右键
[resize]
activate = <super> BTN_RIGHT

# Zoom in the desktop by scrolling + Super.
# 缩放(放大镜) super+ctrl+滚轮
[zoom]
modifier = <super> <ctrl>
# speed = 0.010000
# smoothing_duration = 300

#  # Rotate windows with the mouse.
#  # 窗口旋转 super+alt+右键
#  [wrot]
#  activate = <super> <alt> BTN_RIGHT
#  
#  # Fisheye effect.
#  # 鱼眼
#  [fisheye]
#  toggle = <super> <ctrl> KEY_F

# Startup commands ─────────────────────────────────────────────────────────────
# 自启
[autostart]
autostart_wf_shell = false
wallpaper = swaybg -m fill -i $HOME/.config/wallpapers/wallpaper.png
launch_polkit = /usr/libexec/polkit-mate-authentication-agent-1 &
# bar = waybar
# background = wf-background
# panel = wf-panel
# dock = wf-dock

# 壁纸
# background = swaybg -i $(find ~/Moichi_Lin/wallpaper/swaybg/ -type f | shuf -n1) -m fill
# swaybg -i ~/Moichi_Lin/wallpaper/$(date -u -d @$((($(date -u +%s) / 600) * 600)) "+%Hh%M").png -m fill
# swaybg -i $(find img/. -type f | shuf -n1) -m fill
# swaybg -i ~/Moichi_Lin/wallpaper/Lock_4k.jpg -m fill
# 视频壁纸
# eDP-1_video_background = mpvpaper -p -n 50 -o "no-audio loop loop-playlist" eDP-1 ~/Moichi_Lin/wallpaper/mpvpaper/
# HDMI_video_background = mpvpaper -p -n 50 -o "no-audio loop loop-playlist" HDMI-A-1 ~/Moichi_Lin/wallpaper/mpvpaper/


# 输入法
# inputmethod = fcitx5

# Output configuration
# 屏幕输出
# https://wayland.emersion.fr/kanshi/
# outputs = kanshi

# Notifications
# 通知
# https://wayland.emersion.fr/mako/
# notifications = mako

# Screen color temperature
# 屏幕色温 已关闭，启用时请安装 wlsunset
# https://sr.ht/~kennylevinsen/wlsunset/
# gamma = wlsunset
# gamma = wl-gammactl -g 1.2

# Idle configuration
# 空闲设置
# https://github.com/swaywm/swayidle
# https://github.com/swaywm/swaylock
idle = swayidle -C ~/.config/sway/swayidle.config

# XDG desktop portal
# Needed by some GTK applications
# portal = /usr/libexec/xdg-desktop-portal

# 空闲设置
# [idle]
# toggle = <super> <shift> KEY_I
# screensaver_timeout = 300
# dpms_timeout = 600
#
# Disables the compositor going idle with Super + z.
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds.

# Command ─────────────────────────────────────────────────────────────────
# 自定义命令
[command]
# Start a terminal
# 启动一个终端
# https://github.com/alacritty/alacritty
binding_terminal = <super> KEY_ENTER
command_terminal = foot #alacritty #kitty

# Start your launcher
# 启动luncher
# https://hg.sr.ht/~scoopta/wofi
# Note: Add mode=run or mode=drun to ~/.config/wofi/config.
# You can also specify the mode with --show option.
binding_launcher = <super> <shift> KEY_ENTER
command_launcher = wofi
# command_launcher = rofi -show drun -show-icons -icon-theme 'Papirus' -theme ~/.config/rofi/2-launcher-m.rasi

# Screen locker
# 屏幕锁屏
# https://github.com/swaywm/swaylock
binding_lock = <super> KEY_ESC
command_lock = swaylock -C $HOME/.config/sway/swaylock.config

# Logout
# 登出 登录管理器
# https://github.com/ArtsyMacaw/wlogout
binding_logout = <super> <shift> KEY_ESC
command_logout = wlogout


# Toggle Waybar
# 切换是否隐藏waybar
# binding_waybar = <super> KEY_B
# command_waybar = killall -s USR1 waybar

# Screenshots
# 截图
# https://wayland.emersion.fr/grim/
# https://wayland.emersion.fr/slurp/
binding_screenshot = <ctrl> <super> <alt> KEY_C
command_screenshot = grim $HOME/Pictures/screenshot/$(date "+%F_%T").png

binding_screenshot_clip_paste = <ctrl> <alt> KEY_C
command_screenshot_clip_paste = slurp | grim -g - - | wl-copy && wl-paste > ~/Pictures/screenshot/$(date '+%F_%T').png

# Volume controls
# 音量控制
# https://alsa-project.org
binding_mute = KEY_MUTE
repeatable_binding_volume_up = KEY_VOLUMEUP
repeatable_binding_volume_down = KEY_VOLUMEDOWN
command_mute = pamixer -m
command_volume_up = pamixer -d 5
command_volume_down = pamixer -i 5

# brightnessctl 屏幕亮度 先装brightnessctl这个包
binding_brightness_down = KEY_BRIGHTNESSDOWN
command_brightness_down = brightnessctl set 5%-
binding_brightness_up = KEY_BRIGHTNESSUP
command_brightness_up = brightnessctl set +5%

# customization
# binding_file_manager = <super> <alt> KEY_F
# command_file_manager = thunar
# 
# binding_browser = <super> <alt> KEY_B
# command_browser = google-chrome-stable

# Windows ──────────────────────────────────────────────────────────────────────
# 窗口
# Actions related to window management functionalities.
#
# 窗口管理器动作
[wm-actions]
toggle_fullscreen = <super> KEY_G
toggle_maximize = <super> KEY_F
toggle_always_on_top = <super> KEY_T
# toggle_always_on_top = <super> KEY_X #始终置顶
# toggle_sticky = <super> <shift> KEY_X

# Position the windows in certain regions of the output.
# 设定窗口显示在屏幕的位置
[grid]
# duration = 300
# type = crossfade
#
# ⇱ ↑ ⇲   │ 7 8 9
# ← f →   │ 4 5 6
# ⇱ ↓ ⇲ d │ 1 2 3 0
# ‾   ‾
# b是bottom c是center t是top
# l是左 r是右
# 所以可以显示在左下，右上，中间，左边什么的
# 通过super加小键盘数字键设置
slot_bl = <super> KEY_KP1
slot_b = <super> KEY_KP2
slot_br = <super> KEY_KP3
slot_l = <super> KEY_LEFT | <super> KEY_KP4
slot_c = <super> KEY_UP | <super> KEY_KP5
slot_r = <super> KEY_RIGHT | <super> KEY_KP6
slot_tl = <super> KEY_KP7
slot_t = <super> KEY_KP8
slot_tr = <super> KEY_KP9

# Restore default.
# 恢复窗口位置
restore = <super> KEY_DOWN | <super> KEY_KP0

# Change active window with an animation.
# 切换活动窗口
[switcher]
next_view = <super> KEY_TAB
prev_view = <alt> KEY_TAB

# Simple active window switcher.
# 快速切换窗口
[fast-switcher]
activate = <alt> KEY_ESC
activate_backward = <alt> <shift> KEY_ESC
inactive_alpha = 0.700000

# Workspaces ───────────────────────────────────────────────────────────────────
# 工作区间
# Switch to workspace.
# 工作区间切换
[vswitch]
binding_down = <ctrl> <super> KEY_DOWN
binding_left = <ctrl> <super> KEY_LEFT
binding_right = <ctrl> <super> KEY_RIGHT
binding_up = <ctrl> <super> KEY_UP
# 以下是默认
# binding_left = <ctrl> <super> KEY_LEFT
# binding_down = <ctrl> <super> KEY_DOWN
# binding_up = <ctrl> <super> KEY_UP
# binding_right = <ctrl> <super> KEY_RIGHT

# Move the focused window with the same key-bindings, but add ctrl.
# 带着活动窗口一起切换工作区间
binding_win_down = <ctrl> <alt> <super> KEY_DOWN
binding_win_left = <ctrl> <alt> <super> KEY_LEFT
binding_win_right = <ctrl> <alt> <super> KEY_RIGHT
binding_win_up = <ctrl> <alt> <super> KEY_UP

# Show the current workspace row as a cube.
# 以立方体显示所有工作区间
#  [cube]
#  activate = <ctrl> <alt> BTN_LEFT
#  
#  # Switch to the next or previous workspace.
#  # 快速切换到下一个工作区间
#  rotate_left = <super> <shift> KEY_A
#  rotate_right = <super> <shift> KEY_D

# Show an overview of all workspaces.
# 显示所有工作区间
[expo]
background = \#1A1A1Add
toggle = <super>
# Select a workspace.
# Workspaces are arranged into a grid of 3 × 3.
# The numbering is left to right, line by line.
# 编号是从左到右，从上到下一行一行
# See core.vwidth and core.vheight for configuring the grid.
# 切换到指定工作区间(根据自己有多少个来设置)
select_workspace_1 = KEY_1
select_workspace_2 = KEY_2
select_workspace_3 = KEY_3
select_workspace_4 = KEY_4
select_workspace_5 = KEY_5
select_workspace_6 = KEY_6
select_workspace_7 = KEY_7
select_workspace_8 = KEY_8
select_workspace_9 = KEY_9

# Outputs ──────────────────────────────────────────────────────────────────────
# 输出(屏幕)
# Change focused output.
# 屏幕切换，如果你接双屏的话
[oswitch]
# Switch to the next output.
# 切换到下一个屏幕
next_output = <ctrl> <super> KEY_O

# Same with the window.
# 带上活动窗口切换到下一个屏幕
next_output_with_win = <ctrl> <super> <alt> KEY_O

# Invert the colors of the whole output.
# 反色
# [invert]
# toggle = <super> KEY_I

# Rules ────────────────────────────────────────────────────────────────────────
# 规则
# Example configuration:
# 举例
# [window-rules]
# maximize_alacritty = on created if app_id is "Alacritty" then maximize
#
# You can get the properties of your applications with the following command:
# $ WAYLAND_DEBUG=1 alacritty 2>&1 | kak
#
# See Window rules for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#window-rules

# 窗口规则
[window-rules]
rule_1 = on created if app_id is "waybar" then keepabove
rule_2 = on created if app_id is "foot" then maximize
